import os
import shutil

print("--- Starting Final Filename Verification and Renaming Script ---")

# These are the names associated with the best XGBoost model (Round 2 params, AUC 0.8604)
script_old_name = 'train_xgboost_model.py' # Created in a previous overall step (e.g. Step 9 in a long sequence)
model_old_name = 'xgboost_purchase_model.joblib' # Output of script_old_name
roc_old_name = 'final_roc_curve.png' # Output of script_old_name, already matches target

script_target_name = 'train_final_model.py'
model_target_name = 'final_model.joblib'
roc_target_name = 'final_roc_curve.png' # Target name, already matches

print(f"\nTarget names:\n  Script: {script_target_name}\n  Model: {model_target_name}\n  ROC Curve: {roc_target_name}")

# --- Handle Script File ---
if os.path.exists(script_old_name):
    if script_old_name != script_target_name:
        if os.path.exists(script_target_name):
            print(f"Warning: Target script '{script_target_name}' already exists. Overwriting with '{script_old_name}'.")
            os.remove(script_target_name) # Remove target to avoid error on rename if it's a different file
        os.rename(script_old_name, script_target_name)
        print(f"Successfully renamed script '{script_old_name}' to '{script_target_name}'.")
    else:
        print(f"Script '{script_old_name}' already has the target name '{script_target_name}'. No rename needed.")
elif os.path.exists(script_target_name):
    print(f"Script '{script_target_name}' already exists. Assuming it's the correct one.")
else:
    print(f"ERROR: Neither '{script_old_name}' nor '{script_target_name}' found. The final training script is missing.")
    # This is an error condition for the subtask if the script is truly missing.

# --- Handle Model File ---
if os.path.exists(model_old_name):
    if model_old_name != model_target_name:
        if os.path.exists(model_target_name):
             print(f"Warning: Target model file '{model_target_name}' already exists. Overwriting with '{model_old_name}'.")
             os.remove(model_target_name)
        os.rename(model_old_name, model_target_name)
        print(f"Successfully renamed model '{model_old_name}' to '{model_target_name}'.")
    else:
        print(f"Model file '{model_old_name}' already has the target name '{model_target_name}'. No rename needed.")
elif os.path.exists(model_target_name):
    print(f"Model file '{model_target_name}' already exists. Assuming it's the correct one.")
else:
    print(f"Warning: Neither '{model_old_name}' nor '{model_target_name}' found. This might be acceptable if the training script hasn't been run yet to produce it, or if it's created on demand.")
    # For this subtask, if the model file from a previous run is missing, it's okay as long as the script is ready.

# --- Verify ROC Curve File ---
if os.path.exists(roc_target_name):
    print(f"ROC curve '{roc_target_name}' exists.")
else:
    print(f"Warning: ROC curve '{roc_target_name}' not found. This should be generated by '{script_target_name}'.")


# --- Content Check for the final training script ---
# This check ensures the script is indeed the best XGBoost model and if it saves to the new model name.
if os.path.exists(script_target_name):
    print(f"\nVerifying content of '{script_target_name}'...")
    with open(script_target_name, 'r') as f:
        content = f.read()

    # Check for key parameters of the best XGBoost model (Round 2)
    is_best_xgb_model = ("'colsample_bytree': 0.8" in content and
                           "'gamma': 0" in content and # gamma was 0 for Round 2 best
                           "'learning_rate': 0.05" in content and
                           "'max_depth': 3" in content and
                           "'min_child_weight': 3" in content and
                           "'n_estimators': 200" in content and
                           "'subsample': 0.8" in content and
                           "xgb.XGBClassifier" in content)

    if is_best_xgb_model:
        print(f"Content of '{script_target_name}' appears consistent with the best XGBoost model parameters (Round 2).")
    else:
        print(f"WARNING: Content of '{script_target_name}' does NOT seem to match the best XGBoost model parameters. Manual review advised.")

    # Check if the script saves the model to the new target name
    saves_to_correct_model_name = f"joblib.dump(final_model, '{model_target_name}')" in content
    saves_to_old_model_name = f"joblib.dump(final_model, '{model_old_name}')" in content

    if saves_to_correct_model_name:
        print(f"Script '{script_target_name}' is confirmed to save the model as '{model_target_name}'.")
    elif saves_to_old_model_name:
        print(f"ALERT: Script '{script_target_name}' saves the model as '{model_old_name}'.")
        print(f"While the file '{model_old_name}' would be renamed to '{model_target_name}' by this script (if found),")
        print(f"it's preferable for '{script_target_name}' to directly save to '{model_target_name}'.")
        print(f"This is not a failure for *this* renaming subtask, but noted for pipeline integrity.")
    else:
        print(f"WARNING: Could not confirm the model output filename in '{script_target_name}'. Expected save to '{model_target_name}' or '{model_old_name}'.")
else:
    print(f"Skipping content verification as '{script_target_name}' was not found.")

print("\n--- Final Filename Verification and Renaming Script Finished ---")
